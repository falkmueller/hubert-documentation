
<?php
$translate = array(
	"doc" => "Dokumentation",
	"slug" => "en",
	"wording" => "English",
	"imp" => "Impressum"
);
?>

<?php $this->layout('layout',['translate' => $translate]) ?>

<?php $this->start('head') ?>
    <link rel="canonical" href="<?php echo $this->url(["name" => "home_language", "params" => ["language" => "de"]]) ?>" />
<?php $this->stop() ?>


<header>
	<section>
                
		<h1>Das ist<br>Hubert</h1>
                
		<img class="hubert" src="<?php echo $this->baseUrl("/public/images/hubert.png") ?>" alt="Hubert"/>
                
		<h3>Ein schnelles, einfaches und erweiterbares<br>PHP Microframework</h3>
                
		<div class="window">
			<div class="top">
				<div class="circle"></div>
				<div class="circle"></div>
				<div class="circle"></div>
			</div>
			<pre>

				<div class="line">&lt;?php</div>
				<div class="line"><span class="assign">require</span> <span class="string">'vendor/autoload.php'</span>;</div>
				<div class="line">$app <span class="assign">=</span> <span class="assign">new</span> <span class="method">hubert</span>\<span class="method">app</span>();</div>
				<div class="line">$config <span class="assign">=</span> <span class="method">array</span>(</div>
				<div class="line">    <span class="string">"routes"</span> <span class="assign">=></span> <span class="method">array</span>(</div>
				<div class="line">        <span class="string">"home"</span> <span class="assign">=></span> <span class="method">array</span>(</div>
				<div class="line">            <span class="string">"route"</span> <span class="assign">=></span> <span class="string">"/"</span>,</div>
				<div class="line">            <span class="string">"target"</span> <span class="assign">=></span> <span class="assign">function</span>($request, $response, $args){</div>
				<div class="line">                <span class="method">echo</span> <span class="string">"Hello World"</span>;</div>
				<div class="line">            }</div>
				<div class="line">        )</div>
				<div class="line">    )</div>
				<div class="line">);</div>
				<div class="line">hubert($config);</div>
				<div class="line">hubert()<span class="assign">-></span>core()<span class="assign">-></span>run();</div>
			</pre>
		</div>

	</section>
</header>

<main>
	<section>

		<h2>Standardkomponenten</h2>

		<div class="panel">
            <div class="feature">
                    <i class="fa fa-cogs"></i>
                    <div>
                            <h4>Konfiguration</h4>
                            <p>Hubert wird komplett über einen Array konfiguriert. In diesem definiert man Einstellungen, Routen und Container-Factories.</p>
                    </div>
            </div>

            <hr>

            <div class="feature">
                    <i class="fa fa-archive"></i>
                    <div>
                            <h4>Container</h4>
                            <p>
                                Hubert stellt einen DI-Container bereit, basierend auf <a target="_blank" href="http://pimple.sensiolabs.org/">Pimple</a>.
                                Die in der Konfiguration definierten Container stehen global zur Verfügung und werden erst bei Ihrer erstmaligen Verwendung initialisiert. (lazy-load)
                            </p>
                    </div>
            </div>

            <hr/>

			<div class="feature">
				<i class="fa fa-map-signs"></i>
				<div>
					<h4>Router</h4>
                        <p>
                            Hubert verwendet den <a target="_blank" href="https://github.com/dannyvankooten/AltoRouter">AltoRouter</a>.
                            Die Routen werden in der Konfiguration definiert und können Funktionen sein oder Verweise auf Funktionen.
                        </p>
				</div>
			</div>

			<hr/>

                    
			<div class="feature">
				<i class="fa fa-book"></i>
				<div>
					<h4>PSR-7 implementation</h4>
                        <p>Über die <a target="_blank" href="https://zendframework.github.io/zend-diactoros/">PSR-7</a> Implementierung steht der Request als Container bereit und Routen können mit standardisierten Response-Objekten arbeiten.</p>
				</div>
			</div>


		</div>

		<h2><a href="https://github.com/falkmueller/hubert">Get it now on <i class="fa fa-github"></i></a></h2>

	</section>
</main>


